{"version":3,"sources":["webpack:///src/src/App.vue","app.bb88391a.css","webpack:///src/components/src/components/WeatherSummary.vue","webpack:///src/components/src/components/WeatherConditions.vue","webpack:///src/components/src/components/ErrorList.vue","webpack:///src/views/src/views/CitySearch.vue","webpack:///src/views/src/views/CurrentWeather.vue","webpack:///src/views/src/views/Forecast.vue"],"names":[],"mappings":"AAcA,KACA,yBAAA,CACA,iBAAA,CACA,kCAAA,CACA,iCAAA,CACA,aAAA,CACA,eAAA,CACA,YCZA,CDcA,KACA,gBAAA,CACA,kBAAA,CACA,SAAA,CACA,QCZA,CDcA,KACA,UAAA,CACA,UAAA,CACA,aAAA,CACA,SAAA,CACA,kBCZA,CCIA,iCACA,oBAAA,CACA,WDmBA,CEjBA,oBACA,WAAA,CACA,kBFqBA,CEnBA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UFqBA,CEnBA,oBACA,kBAAA,CACA,kBFqBA,CEnBA,0BACA,WFqBA,CG7CA,4BACA,aAAA,CACA,oBAAA,CACA,WHiDA,CINA,4BACA,SAAA,CACA,oBAAA,CACA,WJUA,CIRA,wCAEA,eJUA,CIPA,oBACA,oBAAA,CACA,SJSA,CIPA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UJSA,CIPA,iCACA,oBAAA,CACA,WJSA,CIPA,oBACA,WAAA,CACA,kBJSA,CIPA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UJSA,CIPA,oBACA,kBAAA,CACA,kBJSA,CIPA,0BACA,WJSA,CINA,mBACA,aJQA,CKhEA,4BACA,SAAA,CACA,oBAAA,CACA,WLoEA,CKlEA,wCAEA,eLoEA,CKjEA,oBACA,oBAAA,CACA,SLmEA,CKjEA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YLmEA,CKjEA,iCACA,oBAAA,CACA,WLmEA,CKjEA,oBACA,WAAA,CACA,kBLmEA,CKjEA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,ULmEA,CKjEA,oBACA,kBAAA,CACA,kBLmEA,CKjEA,0BACA,WLmEA,CKjEA,mBACA,aLmEA,CMxDA,4BACA,SAAA,CACA,oBAAA,CACA,WN4DA,CM1DA,wCAEA,eN4DA,CMzDA,oBACA,oBAAA,CACA,SN2DA,CMzDA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UN2DA,CMxDA,mBACA,aN0DA,CMxDA,iCACA,oBAAA,CACA,WN0DA,CMxDA,oBACA,WAAA,CACA,kBN0DA,CMxDA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UN0DA,CMxDA,oBACA,kBAAA,CACA,kBN0DA,CMxDA,0BACA,WN0DA","file":"app.bb88391a.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Weather Service</h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: comic sans ms;\n  text-align: center;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #070707;\n  margin-top: 60px;\n  padding: 20px;\n}\nhtml {\n  line-height: 50px;\n  background: rgb(23, 77, 99);\n  padding: 0;\n  margin: 0;\n}\nbody {\n  color: black;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0;\n  background: rgb(92, 153, 172);\n}\n/* dl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n} */\n</style>\n","\n#app {\n  font-family: comic sans ms;\n  text-align: center;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #070707;\n  margin-top: 60px;\n  padding: 20px;\n}\nhtml {\n  line-height: 50px;\n  background: rgb(23, 77, 99);\n  padding: 0;\n  margin: 0;\n}\nbody {\n  color: black;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0;\n  background: rgb(92, 153, 172);\n}\n/* dl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n} */\n\n\n.weatherSummary[data-v-fb19c064] {\n  display: inline-block;\n  width: 100px;\n}\n\n\ndl[data-v-e628125c] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-e628125c] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-e628125c] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-e628125c]::after {\n  content: \":\";\n}\n\n\n.errors li[data-v-0c0c5261] {\n  color: rgb(128, 12, 12);\n  border: solid red 1px;\n  padding: 5px;\n}\n\n\n.errors li[data-v-5087f03b] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-5087f03b],\nh2[data-v-5087f03b] {\n  font-weight: normal;\n}\nul[data-v-5087f03b] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-5087f03b] {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n.weatherSummary[data-v-5087f03b] {\n  display: inline-block;\n  width: 100px;\n}\ndl[data-v-5087f03b] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-5087f03b] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-5087f03b] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-5087f03b]::after {\n  content: \":\";\n}\na[data-v-5087f03b] {\n  color: #42b983;\n}\n\n\n.errors li[data-v-82872af6] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-82872af6],\nh2[data-v-82872af6] {\n  font-weight: normal;\n}\nul[data-v-82872af6] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-82872af6] {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n}\n.weatherSummary[data-v-82872af6] {\n  display: inline-block;\n  width: 100px;\n}\ndl[data-v-82872af6] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-82872af6] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-82872af6] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-82872af6]::after {\n  content: \":\";\n}\na[data-v-82872af6] {\n  color: #392580;\n}\n\n\n.errors li[data-v-bfb3de7e] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-bfb3de7e],\nh2[data-v-bfb3de7e] {\n  font-weight: normal;\n}\nul[data-v-bfb3de7e] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-bfb3de7e] {\n  display: inline-block;\n  width: 200px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\na[data-v-bfb3de7e] {\n  color: #01160d;\n}\n.weatherSummary[data-v-bfb3de7e] {\n  display: inline-block;\n  width: 100px;\n}\ndl[data-v-bfb3de7e] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-bfb3de7e] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-bfb3de7e] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-bfb3de7e]::after {\n  content: \":\";\n}\n\n\n/*# sourceMappingURL=app.bb88391a.css.map*/","<template>\n  <div>\n    <div v-for=\"weatherSummary in weatherData\" class=\"weatherSummary\" :key=\"weatherSummary.id\">\n      <img\n        v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\"\n        v-bind:alt=\"weatherSummary.main\"\n      >\n      <br>\n      <b>{{ weatherSummary.main }}</b>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"WeatherSummary\",\n  data() {\n    return {};\n  },\n  props: {\n    weatherData: {}\n  }\n};\n</script>\n\n<style scoped>\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\n</style>","<template>\n  <div>\n    <dl>\n      <dt v-if=\"conditions.temp != conditions.temp_min\">Current Temperature</dt>\n      <dd v-if=\"conditions.temp != conditions.temp_min\">{{ conditions.temp }}%</dd>\n      <dt>Humidity</dt>\n      <dd>{{ conditions.humidity }}%</dd>\n      <dt>High</dt>\n      <dd>{{ conditions.temp_max }}&deg;F</dd>\n      <dt>Low</dt>\n      <dd>{{ conditions.temp_min }}&deg;F</dd>\n    </dl>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WeatherConditions',\n  data () {\n    return {\n\n    }\n  },\n  props: {\n    conditions: {}\n  }\n}\n</script>\n\n<style scoped>\n  dl {\n    padding: 5px;\n    background: #e8e8e8;\n  }\n  dt {\n    float: left;\n    clear: left;\n    width: 120px;\n    text-align: right;\n    font-weight: bold;\n    color: blue;\n  }\n  dd {\n    margin: 0 0 0 130px;\n    padding: 0 0 0.5em 0;\n  }\n  dt::after {\n    content: \":\";\n  }\n</style>","<template>\n  <div v-if=\"errorList.length > 0\">\n    <h2>There was an error fetching data.</h2>\n    <ul class=\"errors\">\n      <li v-for=\"(error,index) in errorList\" :key=\"index\">{{ error }}</li>\n    </ul>\n  </div>\n  \n</template>\n\n<script>\nexport default {\n  name: \"ErrorList\",\n  data() {\n    return {};\n  },\n  props: {\n    errorList: Array\n  }\n};\n</script>\n\n<style scoped>\n.errors li {\n  color: rgb(128, 12, 12);\n  border: solid red 1px;\n  padding: 5px;\n}\n</style>","<template>\n  <div>\n    <h2>City Search</h2>\n    <form v-on:submit.prevent=\"getCities\">\n      <p>\n        Enter city name:\n        <input type=\"text\" v-model=\"query\" placeholder=\"Tacoma\">\n        <button type=\"submit\">Go</button>\n      </p>\n    </form>\n    <ul class=\"cities\" v-if=\"results && results.list.length > 0\">\n      <li v-for=\"(city,index) in results.list\" :key=\"index\">\n        <h2>{{ city.name }}, {{ city.sys.country }}</h2>\n        <p>\n          <router-link\n            v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\"\n          >View Current Weather</router-link>\n        </p>\n\n        <weather-summary v-bind:weatherData=\"city.weather\"></weather-summary>\n        <weather-conditions v-bind:conditions=\"city.main\"></weather-conditions>\n      </li>\n    </ul>\n    <error-list v-bind:errorList=\"errors\"></error-list>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { API } from \"@/common/api\";\nimport WeatherSummary from \"@/components/WeatherSummary\";\nimport WeatherConditions from \"@/components/WeatherConditions\";\nimport ErrorList from \"@/components/ErrorList\";\n\nexport default {\n  name: \"CitySearch\",\n  data() {\n    return {\n      results: null,\n      errors: [],\n      query: \"\"\n    };\n  },\n  methods: {\n    getCities: function() {\n      API.get(\"find\", {\n        params: {\n          q: this.query\n        }\n      })\n\n        .then(response => {\n          this.results = response.data;\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  },\n  components: {\n    \"weather-summary\": WeatherSummary,\n    \"weather-conditions\": WeatherConditions,\n    \"error-list\": ErrorList\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n\n","<template>\n  <div>\n    <h2>\n      Current Weather\n      <span\n        v-if=\"weatherData\"\n      >for {{ weatherData.name }}, {{weatherData.sys.country }}</span>\n    </h2>\n    <p>\n      <router-link to=\"/\">Home</router-link>|\n      <router-link\n        v-bind:to=\"{ name: 'Forecast', params: { cityId: $route.params.cityId } }\"\n      >View 5-Day Forecast</router-link>\n    </p>\n    <div v-if=\"weatherData && errors.length===0\">\n      <weather-summary v-bind:weatherData=\"weatherData.weather\"></weather-summary>\n    </div>\n    <error-list v-bind:errorList=\"errors\"></error-list>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { API } from \"@/common/api\";\nimport WeatherSummary from \"@/components/WeatherSummary\";\nimport WeatherConditions from \"@/components/WeatherConditions\";\nimport ErrorList from \"@/components/ErrorList\";\n\nexport default {\n  name: \"CurrentWeather\",\n  data() {\n    return {\n      weatherData: null,\n      errors: [],\n      query: \"\"\n    };\n  },\n  created() {\n    API.get(\"weather\", {\n      params: {\n        id: this.$route.params.cityId\n      }\n    })\n      .then(response => {\n        this.weatherData = response.data;\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n  },\n  components: {\n    \"weather-summary\": WeatherSummary,\n    \"weather-conditions\": WeatherConditions,\n    \"error-list\": ErrorList\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n}\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\na {\n  color: #392580;\n}\n</style>\n\n\n","<template>\n  <div>\n    <h2>\n      Five Day Hourly Forecast\n      <span\n        v-if=\"weatherData\"\n      >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\n    </h2>\n    <p>\n      <router-link to=\"/\">Home</router-link>|\n      <router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: $route.params.cityId } }\">\n        Current Weather\n        <span\n          v-if=\"weatherData\"\n        >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\n      </router-link>\n    </p>\n\n    <ul v-if=\"weatherData && errors.length===0\" class=\"forecast\">\n      <li v-for=\"(forecast,index) in weatherData.list\" :key=\"index\">\n        <h3>{{ forecast.dt|formatDate }}</h3>\n\n        <weather-summary v-bind:weatherData=\"forecast.weather\"></weather-summary>\n        <weather-conditions v-bind:conditions=\"forecast.main\"></weather-conditions>\n        \n      </li>\n    </ul>\n    <error-list v-bind:errorList=\"errors\"></error-list>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { API } from \"@/common/api\";\nimport WeatherSummary from \"@/components/WeatherSummary\";\nimport WeatherConditions from \"@/components/WeatherConditions\";\nimport ErrorList from \"@/components/ErrorList\";\n\nexport default {\n  name: \"Forecast\",\n  data() {\n    return {\n      weatherData: null,\n      errors: [],\n      query: \"\"\n    };\n  },\n  created() {\n    API.get(\"forecast\", {\n      params: {\n        id: this.$route.params.cityId\n      }\n    })\n\n      .then(response => {\n        this.weatherData = response.data;\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n  },\n\n  filters: {\n    formatDate: function(timestamp) {\n      let date = new Date(timestamp * 1000);\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      const weekdays = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\"\n      ];\n      //let weekday = date.getDay();\n      let daynum = date.getDate();\n      let month = date.getMonth();\n\n      let hour = date.getHours();\n      if (hour === 12) {\n        hour = \"Noon\";\n      } else if (hour === 0) {\n        hour = \"Midnight\";\n      } else if (hour > 12) {\n        hour = hour - 12 + \"PM\";\n      } else if (hour < 12) {\n        hour = hour + \"AM\";\n      }\n      //let year = date.getFullYear();\n      return `${months[month]} ${daynum} @ ${hour}`;\n    }\n  },\n  components: {\n    \"weather-summary\": WeatherSummary,\n    \"weather-conditions\": WeatherConditions,\n    \"error-list\": ErrorList\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 200px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n\na {\n  color: #01160d;\n}\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\n</style>\n\n\n"]}